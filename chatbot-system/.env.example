# ============================================================================
# CHATBOT CONFIGURATION - EXAMPLE
# ============================================================================
# Copy this file to .env and fill in your actual values
# Command: cp .env.example .env

# ============================================================================
# REST API CONFIGURATION
# ============================================================================

# Base URL for your REST API endpoints
# This will replace ${BASE_URL} in api_endpoints.yaml
API_BASE_URL=http://localhost:8000

# Authentication token for REST API
# Used for Bearer token authentication
API_AUTH_TOKEN=your_bearer_token_here

# Optional: API Key authentication (if using api_key instead of bearer)
# API_KEY=your_api_key_here

# Optional: Basic authentication (if using basic auth)
# API_USERNAME=your_username
# API_PASSWORD=your_password

# ============================================================================
# LLM PROVIDER CONFIGURATION
# ============================================================================

# Primary LLM Provider: eliza, openai, anthropic, or litellm
LLM_PROVIDER=eliza

# Eliza Configuration (if using Eliza)
ELIZA_API_URL=http://localhost:5000
ELIZA_API_KEY=your_eliza_key_here

# OpenAI Configuration (if using OpenAI)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4

# Anthropic Configuration (if using Claude)
ANTHROPIC_API_KEY=your_anthropic_api_key_here
ANTHROPIC_MODEL=claude-3-opus-20240229

# LiteLLM Configuration (if using LiteLLM for multi-provider)
LITELLM_MODEL=gpt-3.5-turbo
# Add other LiteLLM env vars as needed per provider

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL Configuration
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=chatbot_db
POSTGRES_USER=chatbot_user
POSTGRES_PASSWORD=chatbot_password_change_this

# Oracle Configuration (if using Oracle)
# ORACLE_HOST=localhost
# ORACLE_PORT=1521
# ORACLE_SERVICE_NAME=ORCL
# ORACLE_USER=your_oracle_user
# ORACLE_PASSWORD=your_oracle_password

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================

# Redis for session management
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Session TTL in seconds (default: 1 hour)
SESSION_TTL=3600

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# WebSocket configuration
WS_HEARTBEAT_INTERVAL=30
WS_MAX_CONNECTIONS=1000

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# Secret key for JWT or session signing
SECRET_KEY=change_this_to_a_random_secret_key_in_production

# Enable/disable authentication
REQUIRE_AUTH=true

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60

# ============================================================================
# DOCKER COMPOSE OVERRIDES
# ============================================================================

# Backend port
BACKEND_PORT=8000

# Frontend port
FRONTEND_PORT=3000

# Postgres port (host mapping)
POSTGRES_EXTERNAL_PORT=5432

# Redis port (host mapping)
REDIS_EXTERNAL_PORT=6379

# ============================================================================
# ADDITIONAL API SETTINGS
# ============================================================================

# API request timeout in seconds
API_TIMEOUT=30

# API retry attempts
API_RETRY_ATTEMPTS=3

# API retry delay in seconds
API_RETRY_DELAY=1

# ============================================================================
# SOAP API CONFIGURATION (if using SOAP)
# ============================================================================

# SOAP_WSDL_URL=http://your-soap-service.com/service?wsdl
# SOAP_AUTH_USERNAME=your_soap_username
# SOAP_AUTH_PASSWORD=your_soap_password

# ============================================================================
# NOTES
# ============================================================================
#
# 1. Always use strong passwords and keys in production
# 2. Never commit .env files to version control
# 3. Keep .env.example updated when adding new variables
# 4. Restart containers after changing .env: docker-compose restart
# 5. For production, use secrets management (e.g., AWS Secrets Manager, HashiCorp Vault)
#
# ============================================================================
