# API Endpoint Configuration for Chatbot
# Define all REST endpoints that the chatbot can access
# See: ENDPOINT_CONFIGURATION_GUIDE.md for detailed documentation

endpoints:
  # ========================================================================
  # CASE MANAGEMENT ENDPOINTS
  # ========================================================================

  - name: "get_case_alerts"
    description: "Retrieve all alerts associated with a specific case ID. This endpoint returns detailed alert information for alerts that belong to a particular case, including risk scores, scenario analysis, customer profiles, account information, financial advisor details, AML checks, transaction patterns, and compliance review history. This endpoint is CASE-CENTRIC and requires a case ID to fetch its associated alerts. Use this endpoint when the user asks about: 'alerts in case X', 'what alerts are in this case', 'show me alerts for case 12345', 'alert details for a specific case', 'what triggered this case', or 'alerts associated with case number ABC'. DO NOT use this endpoint to get a single alert by alert ID alone (use a different endpoint for that). DO NOT use this for listing multiple cases. This endpoint requires the case ID as a path parameter which will be replaced at runtime."
    url: "${BASE_URL}/cases/{caseId}/alerts"
    method: "GET"
    requires_auth: true

    # Parameter metadata for FilterGenerator (natural language support)
    parameter_metadata:
      caseId:
        type: "string"
        description: "Case identifier - REQUIRED path parameter that identifies which case's alerts to retrieve"
        required: true
      status:
        type: "string"
        possible_values: ["Open", "Closed", "In Progress", "Under Review", "Resolved"]
        case_sensitive: false
        description: "Filter alerts by status"
      priority:
        type: "string"
        possible_values: ["Low", "Medium", "High", "Critical"]
        case_sensitive: false
        description: "Filter alerts by priority level"
      alertTypeId:
        type: "string"
        description: "Filter by alert type identifier (e.g., customer-review, transaction-monitoring)"
      focalEntity:
        type: "string"
        possible_values: ["Customer", "Account", "Transaction", "Branch", "Representative"]
        description: "Filter by focal entity type"
      isActive:
        type: "boolean"
        description: "Filter active vs inactive alerts"
        default: true
      limit:
        type: "integer"
        description: "Maximum number of alerts to return"
        default: 50
      offset:
        type: "integer"
        description: "Number of alerts to skip for pagination"
        default: 0

    parameters:
      - name: "caseId"
        type: "string"
        description: "Case identifier - REQUIRED path parameter to identify which case's alerts to retrieve"
        required: true
        in: "path"
      - name: "status"
        type: "string"
        description: "Filter alerts by status (Open, Closed, In Progress, Under Review, Resolved)"
        required: false
        in: "query"
      - name: "priority"
        type: "string"
        description: "Filter alerts by priority level (Low, Medium, High, Critical)"
        required: false
        in: "query"
      - name: "alertTypeId"
        type: "string"
        description: "Filter by alert type identifier"
        required: false
        in: "query"
      - name: "focalEntity"
        type: "string"
        description: "Filter by focal entity type (Customer, Account, Transaction, Branch, Representative)"
        required: false
        in: "query"
      - name: "isActive"
        type: "boolean"
        description: "Filter active vs inactive alerts"
        required: false
        default: true
        in: "query"
      - name: "limit"
        type: "integer"
        description: "Maximum number of alerts to return"
        required: false
        default: 50
        in: "query"
      - name: "offset"
        type: "integer"
        description: "Number of alerts to skip for pagination"
        required: false
        default: 0
        in: "query"

    response_format:
      type: "array"
      item_schema:
        id: "string"
        alertId: "string"
        createDate: "datetime"
        lastUpdateDate: "datetime"
        totalScore: "number"
        createdBy: "string"
        businessDate: "datetime"
        focalEntity: "string"
        focus: "string"
        alertTypeId: "string"
        alertRegion: "string"
        alertGroupId: "string"
        isConsolidated: "boolean"
        isActive: "boolean"
        hasMultipleScenario: "boolean"
        isDeleted: "boolean"
        orgUnitId: "string"
        orgFamily: "string"
        previousOrgUnitId: "string"
        isOrgUnitUpdated: "boolean"
        isRelatedAlert: "boolean"
        ownerId: "string"
        ownerName: "string"
        status: "string"
        alertStepId: "string"
        alertStepName: "string"
        isCaseCreated: "boolean"
        details: "string"
        pivot: "string"
        accountId: "string"
        transactionId: "string"
        customerId: "string"
        houseHoldId: "string"
        priority: "string"
        tag: "string"
        branchId: "string"
        representativeId: "string"
        buildingBlock: "string"
        representativeName: "string"
        lastStepUpdatedDate: "datetime"
        dueIn: "string"
        deadLine: "datetime"
        branchName: "string"
        customerName: "string"
        accountName: "string"
        scenarioModelIds: "string"
        scenarioModelNames: "string"
        alertTypeName: "string"
        alertSource: "string"
        reasonDetails: "object"
        customFields: "object"
        createdAt: "datetime"
        updatedAt: "datetime"
      description: "Array of alerts belonging to the specified case. Each alert includes comprehensive detail with nested reasonDetails (scenarios with risk scores, thresholds, actual values) and customFields (customer profile, account info, financial advisor details, risk assessment, review history, AML checks, transaction patterns)"

  - name: "list_all_cases"
    description: "Retrieve a comprehensive list of all cases with summary-level information including case metadata, workflow details, customer/account associations, and risk indicators. This endpoint provides overview data across multiple cases and should be used when the user asks questions about multiple cases, case overviews, case listings, or general case information. DO NOT use this endpoint for detailed single-case queries or when the user needs alert-specific information associated with individual cases. Best for: browsing cases, comparing multiple cases, getting case summaries, viewing case portfolios, filtering by case attributes (status, priority, type, region, organization), or analyzing case distributions."
    url: "${BASE_URL}/cases"
    method: "GET"
    requires_auth: true

    # Parameter metadata for FilterGenerator (natural language support)
    parameter_metadata:
      status:
        type: "string"
        possible_values: ["Open", "Closed", "In Progress", "Pending", "Resolved"]
        case_sensitive: false
        description: "Filter cases by current status"
      priority:
        type: "string"
        possible_values: ["LOW", "MEDIUM", "HIGH", "CRITICAL"]
        case_sensitive: false
        description: "Filter by case priority level"
      caseType:
        type: "string"
        description: "Filter by case type or category (e.g., account-review, transaction-monitoring)"
      orgFamily:
        type: "string"
        description: "Filter by organization family (e.g., RETAIL_BANKING, CORPORATE_BANKING)"
      businessRegion:
        type: "string"
        description: "Filter by business region (e.g., North America, Europe, Asia Pacific)"
      isActive:
        type: "boolean"
        description: "Filter active vs inactive cases"
        default: true
      ownerId:
        type: "string"
        description: "Filter by case owner ID"
      customerId:
        type: "string"
        description: "Filter by customer ID"
      accountId:
        type: "string"
        description: "Filter by account ID"
      focalEntity:
        type: "string"
        possible_values: ["customer", "account", "transaction", "branch", "representative"]
        description: "Filter by focal entity type"
      limit:
        type: "integer"
        description: "Maximum number of cases to return"
        default: 100
      offset:
        type: "integer"
        description: "Number of cases to skip for pagination"
        default: 0

    parameters:
      - name: "status"
        type: "string"
        description: "Filter cases by current status (Open, Closed, In Progress, Pending, Resolved)"
        required: false
        in: "query"
      - name: "priority"
        type: "string"
        description: "Filter by case priority level (LOW, MEDIUM, HIGH, CRITICAL)"
        required: false
        in: "query"
      - name: "caseType"
        type: "string"
        description: "Filter by case type or category"
        required: false
        in: "query"
      - name: "orgFamily"
        type: "string"
        description: "Filter by organization family"
        required: false
        in: "query"
      - name: "businessRegion"
        type: "string"
        description: "Filter by business region"
        required: false
        in: "query"
      - name: "isActive"
        type: "boolean"
        description: "Filter active vs inactive cases"
        required: false
        default: true
        in: "query"
      - name: "ownerId"
        type: "string"
        description: "Filter by case owner ID"
        required: false
        in: "query"
      - name: "customerId"
        type: "string"
        description: "Filter by customer ID"
        required: false
        in: "query"
      - name: "accountId"
        type: "string"
        description: "Filter by account ID"
        required: false
        in: "query"
      - name: "focalEntity"
        type: "string"
        description: "Filter by focal entity type (customer, account, transaction, branch, representative)"
        required: false
        in: "query"
      - name: "limit"
        type: "integer"
        description: "Maximum number of cases to return"
        required: false
        default: 100
        in: "query"
      - name: "offset"
        type: "integer"
        description: "Number of cases to skip for pagination"
        required: false
        default: 0
        in: "query"

    response_format:
      type: "array"
      item_schema:
        caseId: "integer"
        caseNumber: "string"
        title: "string"
        description: "string"
        status: "string"
        priority: "string"
        caseType: "string"
        resolution: "string"
        orgUnitId: "string"
        orgUnitKey: "string"
        previousOrgUnitId: "string"
        isOrgUnitUpdated: "boolean"
        orgKey: "string"
        orgFamily: "string"
        ownerId: "string"
        ownerName: "string"
        assignedTo: "string"
        customerId: "string"
        accountId: "string"
        branchId: "string"
        householdId: "string"
        totalScore: "number"
        businessRegion: "string"
        caseGroupId: "string"
        buildingBlock: "string"
        workflowId: "integer"
        currentStepId: "integer"
        currentStepName: "string"
        lastStepUpdatedDate: "datetime"
        isActive: "boolean"
        isDeleted: "boolean"
        isConsolidated: "boolean"
        isRelatedCase: "boolean"
        createdAt: "datetime"
        updatedAt: "datetime"
        closedAt: "datetime"
        dueDate: "datetime"
        businessDate: "datetime"
        deadline: "datetime"
        createdBy: "string"
        updatedBy: "string"
        closedBy: "string"
        externalCaseId: "string"
        parentCaseId: "string"
        tags: "string"
        notes: "string"
        focalEntity: "string"
        dueIn: "string"
        customerName: "string"
        accountName: "string"
        transactionId: "string"
        branchName: "string"
        representativeId: "string"
        representativeName: "string"
        scenarioModelIds: "string"
        scenarioModelNames: "string"
        hasMultipleScenario: "boolean"
        watchListId: "string"
        focus: "string"
        pivot: "string"
        reasonDetails: "object"
        customFields: "object"
        workflowInfo: "object"
        metadata: "object"


  # ========================================================================
  # USER MANAGEMENT ENDPOINTS
  # ========================================================================

  - name: "get_user_info"
    description: "Get user information, profile, or details by user ID, email, or name. Use this when user asks about a person, team member, or wants to look up user information."
    url: "${BASE_URL}/api/v1/users/{user_id}"
    method: "GET"
    requires_auth: true
    parameters:
      - name: "user_id"
        type: "string"
        description: "User ID, email address, or username"
        required: true
        in: "path"
    response_format:
      type: "object"
      schema:
        user_id: "string"
        name: "string"
        email: "string"
        department: "string"
        role: "string"

  - name: "list_users"
    description: "Get list of all users or search users by name, email, department, or role. Use this when user wants to find users or see team members."
    url: "${BASE_URL}/api/v1/users"
    method: "GET"
    requires_auth: true
    parameters:
      - name: "search"
        type: "string"
        description: "Search query for name, email, or username"
        required: false
        in: "query"
      - name: "department"
        type: "string"
        description: "Filter by department"
        required: false
        in: "query"
      - name: "role"
        type: "string"
        description: "Filter by role"
        required: false
        in: "query"

  # ========================================================================
  # STATISTICS & REPORTING ENDPOINTS
  # ========================================================================

# Authentication Configuration
authentication:
  type: "bearer"  # Options: bearer, basic, api_key, oauth2
  token_env_var: "API_AUTH_TOKEN"  # Environment variable containing token
  header_name: "Authorization"  # Header name for auth
  token_prefix: "Bearer"  # Prefix for token (e.g., "Bearer <token>")

# Base URL Configuration
base_url_env_var: "REST_API_BASE_URL"  # Environment variable for base URL
default_base_url: "http://52.55.66.63:8081"  # Fallback base URL

# Global Settings
timeout: 30  # Request timeout in seconds
retry_attempts: 3
retry_delay: 1  # Seconds between retries
